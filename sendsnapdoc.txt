/+
@SILdoc(`
Generate a zfs send stream for the specified snapshot and write it to
the specified file descriptor.

"snapname" is the full name of the snapshot to send (e.g. "pool/fs@snap")

If "from" is NULL, a full (non-incremental) stream will be sent.
If "from" is non-NULL, it must be the full name of a snapshot or
bookmark to send an incremental from (e.g. "pool/fs@earlier_snap" or
"pool/fs#earlier_bmark").  If non-NULL, the specified snapshot or
bookmark must represent an earlier point in the history of "snapname").
It can be an earlier snapshot in the same filesystem or zvol as "snapname",
or it can be the origin of "snapname"'s filesystem, or an earlier
snapshot in the origin, etc.

"fd" is the file descriptor to write the send stream to.

If "flags" contains LZC_SEND_FLAG_LARGE_BLOCK, the stream is permitted
to contain DRR_WRITE records with drr_length > 128K, and DRR_OBJECT
records with drr_blksz > 128K.

If "flags" contains LZC_SEND_FLAG_EMBED_DATA, the stream is permitted
to contain DRR_WRITE_EMBEDDED records with drr_etype==BP_EMBEDDED_TYPE_DATA,
which the receiving system must support (as indicated by support
for the "embedded_data" feature).

If "flags" contains LZC_SEND_FLAG_COMPRESS, the stream is generated by using
compressed WRITE records for blocks which are compressed on disk and in
memory.  If the lz4_compress feature is active on the sending system, then
the receiving system must have that feature enabled as well.

If "flags" contains LZC_SEND_FLAG_RAW, the stream is generated, for encrypted
datasets, by sending data exactly as it exists on disk.  This allows backups
to be taken even if encryption keys are not currently loaded.
`)
+/
